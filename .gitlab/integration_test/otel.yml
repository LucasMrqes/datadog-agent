---
# integration_test stage
# Contains jobs to run integration tests in otel go binaries


.install_pr_commenter_new:
  # Add janky means of installing PR commenter borrowed from
  # https://github.com/DataDog/dogweb/blob/45d7fcf035d0d515ebd901919099d4c8bfa82829/docker/docker-builder/Dockerfile#L69-L77
  - apt-get update
  - apt-get install -y curl
  - curl -OL https://s3.amazonaws.com/dd-package-public/dd-package.deb
  - dpkg -i dd-package.deb
  - rm dd-package.deb
  - apt-get update
  - dd-package --bucket binaries.ddbuild.io --package devtools/dd-package-dev --distribution "14.04"
  # Kludge from https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4645#note_287636439 to avoid
  # doubled output
  - echo ""
  - "####################### NOTE TO MAINTAINERS #####################################"
  - "# Ignore bdist_wheel build error raised when installing 'devtools/pr-commenter' #"
  - "# This error is known behavior, and you should see a successful install         #"
  - "# beneath the error message in the GitLab CI logs                               #"
  - "#################################################################################"
  - echo ""
  # Pinned version of pr-commenter taken from https://github.com/DataDog/dogweb/blob/b249c0815f70e71e07846f5e42fb6504c17a7c3e/tasks/gitlab/k8s-diff-helper.sh#L22
  - dd-package --bucket binaries.ddbuild.io --package devtools/pr-commenter --distribution "14.04" --version "16841676-368d2e2d"




integration_tests_otel:
  stage: integration_test
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  tags: ["arch:amd64"]
  script:
    - lsb_release -a
    - source /root/.bashrc
    - !reference [.install_pr_commenter_new]
    - inv otel-integration-test
  needs: []
  # rules: # this should only run on dev branches
  #   - if: $CI_PIPELINE_SOURCE =~ /^schedule.*$/
  #     when: never
  #   - if: $CI_COMMIT_TAG
  #     when: never
  #   - !reference [.except_main_or_release_branch]
  #   - if: $CI_COMMIT_MESSAGE =~ /.*\[skip cancel\].*/
  #     when: never
  #   - if: $CI_COMMIT_REF_NAME =~ /.*-skip-cancel$/
  #     when: never
  #   - when: always
  #     allow_failure: true
